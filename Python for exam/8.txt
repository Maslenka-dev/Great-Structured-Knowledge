itertools.permutations не знает, что какие-то элементы "одинаковые" - оно просто работает с позициями, а не со значениями.

Для получения уникальной перестановки по символам, можно обернуть результат во множество: set(itertools.permutations('AAB'))

ЧИСЛА НЕ НАЧИНАЮТСЯ С НУЛЯ. ПЕРВАЯ ЦИФРА НИКОГДА НЕ МОЖЕТ БЫТЬ РАВНА НУЛЮ. ЕБАНАЯ ХУЙНЯ. 

----------------------------------------------------------------------

Буквы

	Алексей составляет таблицу кодовых слов для передачи сообщений, каждому сообщению соответствует своё кодовое слово. В качестве кодовых слов Алексей использует 5-буквенные слова, в которых есть только буквы A, B, C, X, причём буква X может появиться на последнем месте или не появиться вовсе. Сколько различных кодовых слов может использовать Алексей?

		from itertools import *
		r = []
		for x in product('abcx', repeat = 5):
		    t = ''.join(x)
		    if (t[-1] == 'x' and t.count('x') == 1) or 'x' not in t:
		        r.append(x)
		        print(x)
		print(len(r))

	Лида составляет слова из букв К, Р, Ы, Ш, А. Каждая гласная буква встречается в слове не более двух раз. Каждая согласная может стоять в слове на первой позиции, либо не встречаться вовсе. Сколько слов длиною более двух символов может составить Лида?

		from itertools import *
		r = []
		for ln in range(3, 6):
		    for x in product('крыша', repeat = ln):
		        t = ''.join(x)
		        t = t.replace('р', 'к').replace('ш', 'к')
		        if t.count('ы') <= 2 and t.count('а') <= 2:
		            if (t[0] == 'к' and 'к' not in t[1:5]) or 'к' not in t: 
		                r.append(x)
		                print(x)
		print(len(r))

	Ася составляет семибуквенные слова из букв А, П, Е, Л, Ь, С, И, Н. Все буквы слова различны. Буква Ь, если встречается, стоит между двумя согласными. Сколько таких слов может составить Ася?

		from itertools import *
		r = []
		for x in permutations('апельсин', 7):
		    t = ''.join(x)
		    t = t.replace('л', 'п').replace('с', 'п').replace('н', 'п')
		    if 'пьп' in t: 
		        r.append(x)
		        print(x)
		    if 'ь' not in t: 
		        r.append(x)
		        print(x)
		print(len(r))	

	Даша составляет 7-буквенные слова из букв БАНДЕРОЛЬ. Мягкий знак используется в каждом слове не больше одного раза. Остальные буквы могут быть использованы сколько угодно раз или не использоваться совсем. Сколько слов может составить Даша, если известно, что буква Е не может стоять рядом с согласными?

		from itertools import *
		r = []
		for x in product('бандероль', repeat = 7):
		    t = ''.join(x)
		    for i in 'бндрл': t = t.replace(i, 'л')
		    if t.count('ь') <= 1 and 'ел' not in t and 'ле' not in t:
		        r.append(x)
		print(len(r))

	Светлана составляет коды из букв слова РОСОМАХА. Код должен состоять из 8 букв, и каждая буква в нём должна встречаться столько же раз, сколько в заданном слове. Кроме того, в коде не должны стоять рядом две гласные и две согласные буквы. Сколько кодов может составить Светлана?

		from itertools import *
		r = []
		for x in set(permutations('росомаха', 8)):
		    t = ''.join(x).replace('а', 'о')
		    for i in 'рсмх':
		        t = t.replace(i, 'р')
		    if 'оо' not in t and 'рр' not in t:
		        r.append(x)
		        print(x)
		print(len(r))

	Аня составляет слова, переставляя буквы в слове ОДЕКОЛОН, избегая слов, где соседние буквы — одинаковые. Сколько различных слов, включая исходное, может составить Аня?

		from itertools import *
		r = []
		for x in set(permutations('одеколон')):
		    t = ''.join(x)
		    if all(t[i] != t[i + 1] for i in range(len(x) - 1)):
		        r.append(x)
		print(len(r))	

		ИЛИ (хуйня)

		from itertools import *
		r = []
		for x in set(permutations('одеколон')):
		    t = ''.join(x)
		    if 'оо' not in t and 'дд' not in t and 'ее' not in t \
		    and 'кк' not in t and 'лл' not in t and 'нн' not in t:
		        r.append(x)
		print(len(r))

	Вася составляет шестибуквенные слова, в которых могут быть использованы только буквы В, И, Ш, Н, Я, причём буква В используется не более одного раза. Каждая из других допустимых букв может встречаться в слове любое количество раз или не встречаться совсем. Слово не должно начинаться с буквы Ш и оканчиваться гласными буквами. Словом считается любая допустимая последовательность букв, не обязательно осмысленная. Сколько существует таких слов, которые может написать Вася?

		from itertools import *
		r = []
		for x in product('вишня', repeat = 6):
		    t = ''.join(x)
		    if t.count('в') <= 1:
		        if t[0] != 'ш' and t[-1] != 'и' and t[-1] != 'я':
		            r.append(x)
		            print(x)
		print(len(r))

	Семён составляет слова из букв К, О, М, П, Е, Г, Э.
	Сколько слов длиной 6 может составить Семён, если на первой и последних позициях могут быть только гласные буквы, на остальных — только согласные?
	Под словом понимается любая буквенная последовательность, не обязательно осмысленная. Каждая буква может входить в слово любое количество раз.

		from itertools import *
		r = []
		for x in product('компегэ', repeat = 6):
		    t = ''.join(x).replace('о', 'э').replace('е', 'э')
		    if t[0] == 'э' and t[-1] == 'э' and all(t[i] != 'э' for i in range(1, 5)) == True:
		        r.append(t)
		print(len(r))	

		ИЛИ

		from itertools import *
		r = []
		for x in product('компегэ', repeat = 6):
		    t = ''.join(x).replace('о', 'э').replace('е', 'э')
		    if t[0] == 'э' and t[-1] == 'э':
		        if t[1] != 'э' and t[2] != 'э' and t[3] != 'э' and t[4] != 'э':
		            r.append(t)
		print(len(r))	

Цифры

	Сколько существует 4-разрядных четверичных чисел, в которых хотя бы одна цифра встречается не менее двух раз?

		from itertools import *
		r = []
		for x in product('0123', repeat = 4):
		    if x[0] != '0':
		        if len(set(x)) != len(x):
		            r.append(x)
		            print(x)
		print(len(r))

	В классе учатся 12 девочек и 5 мальчиков. Сколько вариантов для того, чтобы сделать танцевальную пару на выпускной, состоящую из 1 мальчика и 1 девочки?

		from itertools import *
		r = []
		for x in product(range(12), range(5)):
		    r.append(x)
		print(len(r))

	Вася хочет прийти в гости к своему другу, но забыл номер квартиры. Однако точно помнит, что номер квартиры состоит из нечётных цифр и двузначный, а также вторая цифра больше первой. Сколько вариантов есть у Васи?

		from itertools import *
		r = []
		for x in product('13579', repeat = 2):
		    if x[1] > x[0]: 
		        r.append(x)
		print(len(r))

	Определите количество пятизначных чисел в шестнадцатеричной системе счисления, которые не оканчиваются чётными цифрами и не начинаются с цифры 1.

		from itertools import *
		r = []
		for x in product('0123456789ABCDEF', repeat = 5):
		    if x[0] != '0' and x[0] != '1' and int(x[-1], 16) % 2 != 0: 
		        r.append(x) 
		print(len(r))	

	Определите количество семизначных чисел, записанных в девятеричной системе счисления, учитывая, что числа не могут начинаться с цифр 3 и 7 и не должны содержать пары соседних одинаковых цифр (например, 00).

		from itertools import *
		r = []
		for s in product('012345678', repeat = 7): 
		    x = ''.join(s)
		    if x[0] not in '037' and '00' not in x and '11' not in x and '22' not in x and '33' not in x and '44' not in x \
		        and '55' not in x and '66' not in x and '77' not in x and '88' not in x:
		        r.append(s)
		print(len(r))	

		ИЛИ

		from itertools import *
		r = []
		for s in product('012345678', repeat = 7): 
			if x[0] not in '037' and all(s[i] != s[i + 1] for i in range(len(x) - 1)):
			    r.append(s)
		print(len(r))	

	Сколько существует шестнадцатеричных трёхзначных чисел, в которых все цифры различны и никакие две чётные или две нечётные цифры не стоят рядом?

		from itertools import *
		r = []
		for i in permutations('0123456789ABCDEF', 3):
		    if i[0] != '0': 
		    	if all((int(i[n], 16) % 2) != (int(i[n + 1], 16) % 2) for n in range(len(i) - 1)): r.append(i)
		print(len(r))	

		ИЛИ

		from itertools import *
		r = []
		for i in permutations('0123456789ABCDEF', 3): 
			if i[0] != '0':
				t = ''.join(i)
				for w in '13579BDF': t = t.replace(w, '1')
				for y in '02468ACE': t = t.replace(y, '0')
				if '11' not in t and '00' not in t: r.append(i)
		print(len(r))	

	Определите количество шестизначных чисел, записанных в шестеричной системе счисления, в записи которых ровно одна цифра 2, при этом никакая нечётная цифра не стоит рядом с цифрой 2.

		from itertools import *
		r = []
		for x in product('012345', repeat = 6):
		    if x[0] != '0':
		        t = ''.join(x)
		        for i in '135': t = t.replace(i, '1')
		        if t.count('2') == 1 and '12' not in t and '21' not in t: r.append(x)
		print(len(r))	

	Сколько существует семеричных пятизначных чисел, содержащих в своей записи ровно одну цифру 6 и не содержащих идущих подряд одинаковых цифр?

		from itertools import *
		r = []
		for x in product('0123456', repeat = 5):
		    if x[0] != '0':
		            t = ''.join(x)
		            if t.count('6') == 1 and all(t[i] != t[i + 1] for i in range(4)):
		                r.append(x)
		                print(t)
		print(len(r))

	Определите количество 12-ричных пятизначных чисел, в записи которых ровно одна цифра 7 и не более трёх цифр с числовым значением, превышающим 8.

		from itertools import *
		r = []
		for x in product('0123456789AB', repeat = 5):
		    if x[0] != '0':
		        t = ''.join(x)
		        for i in t: 
		            if int(i, 12) > 8: t = t.replace(i, '9')
		        if t.count('7') == 1 and t.count('9') <= 3: 
		            r.append(x)
		print(len(r))	

		ИЛИ

		from itertools import *
		r = []
		for x in product('0123456789AB', repeat = 5):
		    if x[0] != '0':
		        t = ''.join(x)
		        if t.count('7') == 1 and (t.count('9') + t.count('A') + t.count('B')) <= 3: 
		            r.append(x)
		print(len(r))	

	Определите количество пятизначных чисел, записанных в семеричной системе счисления, в записи которых ровно одна цифра 5, при этом никакая чётная цифра не стоит рядом с цифрой 5.

		from itertools import *
		r = []
		for x in product(range(7), repeat = 5):
		    if x[0] != 0: 
		        if x.count(5) == 1:
		            ok = True
		            for i in range(4):
		                if x[i + 1] == 5 and (x[i - 1] % 2) == 0: 
		                    ok = False
		                if x[i] == 5 and (x[i + 1] % 2) == 0: 
		                    ok = False
		            if ok: r.append(x)
		print(len(r))