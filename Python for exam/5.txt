Двоичная система:

		На вход алгоритма подается натуральное число N. Алгоритм строит по нему новое число R следующим образом.
		1. Строится двоичная запись числа N
		2. К этой записи дописывается разряд по следующему правилу: если два младших (правых) разряда одинаковые, справа дописывается 0, иначе справа дописывается 1.
		3. К полученной записи дописывается еще один бит по правилу в пункте 2.
		Полученная таким образом запись является двоичной записью искомого числа R.
		Укажите минимальное число N, при вводе которого получится значение R больше, чем 93. В ответе полученное число запишите в десятичной системе.

			def f(N):
			    res = bin(N)[2:]
			    for i in range(2):
			        if res[-1] == res[-2]: res += '0'
			        else: res += '1'
			    return int(res, 2)
			print(min(N for N in range(5, 100) if f(N) > 93))		

			[-1] - срез указывает на последнее число.
			[-2] - срез указывает на предпоследнее число.		

		На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом. 
		1. Строится двоичная запись числа N.
		2. Полученная запись переворачивается (записывается слева направо).
		3. К полученной записи справа дописывается правый бит.
		Полученная таким образом запись (в ней на один разряд больше, чем в записи исходного числа N) является двоичной записью искомого числа R. Укажите минимальное число N в результате обработки которого получится число, большее 99. В ответе это число запишите в десятичной системе.

			def f(N):
			    res = bin(N)[2:]
			    res = res[::-1]
			    res += res[-1]
			    return int(res, 2)
			print(min([N for N in range(0, 100) if f(N) > 99]))

		На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом. 
		1. Строится двоичная запись числа N.
		2. К этой записи дописываются справа и слева ещё по одному или два разряда по следующему правилу: если N чётное, то в конец числа (справа) дописывается нуль, а в начало числа (слева) дописывается единица; если N нечётное, то в конец числа (справа) и в начало числа (слева) дописываются по две единицы. 
		Укажите наименьшее число R, превышающее 225, которое может являться результатом работы данного алгоритма. В ответе это число запишите в десятичной системе счисления.

			def f(N):
			    res = bin(N)[2:]
			    r = ''
			    if N % 2 == 0: 
			        r += '1' + res + '0'
			    else: 
			        r += '11' + res + '11'
			    return int(r, 2)
			R = []
			for i in range(0, 1000):
			    R.append(f(i))
			print(sorted(R)) 

			Находим минимальное число, превышающее 225 в списке чисел.

		На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
		1. Строится двоичная запись числа N.
		2. Все разряды полученного числа инвертируются.
		3. К полученному результату справа дописывается бит четности.
		Бит чётности это остаток от деления на 2 суммы цифр двоичной записи числа.
		Укажите максимальное число R, меньшее 170, которое может быть получено в результате работы этого алгоритма. В ответе это число запишите в десятичной системе.

			def f(N):
			    res = bin(N)[2:]
			    r = ''
			    for i in res:
			        if i == '1': r += '0'
			        else: r += '1'
			    l = res.count('1')
			    r += str(l % 2)
			    return int(r, 2)
			R = []
			for i in range(0, 1000):
			    R.append(f(i))
			print(sorted(R))

			Находим максимальное число, меньше 170 в списке чисел.

		На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему новое число R следующим образом.
		1. Строится двоичная запись числа N.
		2. Далее эта запись обрабатывается по следующему правилу: если число N делится на 3, то к этой записи дописываются три последние двоичные цифры; если число N на 3 не делится, то остаток от деления умножается на 3, переводится в двоичную запись и дописывается в конец числа.
		3. Результат переводится в десятичную систему и выводится на экран.
		Укажите максимальное число N, после обработки которого с помощью этого алгоритма получается число R, меньшее чем 76.

			def f(N):
			    res = bin(N)[2:]
			    r = ''
			    if N % 3 == 0: r += res + res[-3] + res[-2] + res[-1]
			    else: r += res + (bin((N % 3) * 3)[2:])
			    return int(r, 2)
			print(max([N for N in range(4, 1000) if f(N) < 76]))

		Автомат обрабатывает натуральное число N по следующему алгоритму:
		1. Строится двоичная запись числа N.
		2. Из записи удаляются все нули.
		3. Полученное число переводится в десятичную запись и выводится на экран.
		Сколько разных значений будет показано на экране автомата при последовательном вводе всех натуральных чисел от 10 до 2500.

			def f(N):
			    res = bin(N)[2:]
			    r = ''
			    l = res.count('1')
			    r += '1' * l
			    return int(r, 2)
			r = set()
			for i in range(10, 2501):
			    r.add(f(i))
			print(len(r))

Десятичная система

		Автомат получает на вход пятизначное число. По этому числу строится новое число по следующим правилам.
		1. Вычисляется квадрат суммы наибольшей и наименьшей цифр исходного числа.
		2. Вычисляется произведение всех чётных цифр исходного числа.
		3. Полученные два числа записываются друг за другом в порядке невозрастания (без разделителей).
		Укажите наименьшее число, при обработке которого автомат выдаст число 12116.

			def f(n):
			    digits = sorted(map(int, str(n)))
			    res1 = (digits[0] + digits[-1])**2
			    res2 = 1
			    for i in digits:
			        if i % 2 == 0: res2 *= i
			    if res1 > res2: return str(res1) + str(res2)
			    else: return str(res2) + str(res1)
			print(min([n for n in range(10000, 100000) if int(f(n)) == 12116]))		

		Автомат получает на вход натуральное четырёхзначное число N. По этому числу строится новое число по следующим правилам:
    	1. Цифры числа сортируются по возрастанию.
    	2. Для полученного числа складываются 1 и 4 цифры и перемножаются 2 и 3 цифры.
    	3. Результаты сложения и умножения записываются друг за другом: сначала результат сложения, затем умножения.
		Сколько существует чисел N, в результате применения к которым данного алгоритма получается число 1128?

			def f(n):
			    digits = sorted(map(int, str(n)))
			    res1 = digits[0] + digits[3]
			    res2 = digits[1] * digits[2]
			    resAll = str(res1) + str(res2) 
			    return int(resAll)
			r = 0
			for i in range(1000, 10000):
			    if f(i) == 1128: r += 1
			print(r)

		На вход алгоритма подаётся натуральное четырёхзначное число NN, в котором все цифры различны. Алгоритм строит по нему новое число RR следующим образом:
		1. Максимальная и минимальная цифры числа складываются.
		2. Остальные две цифры перемножаются.
		3. Полученные два числа записываются друг за другом в порядке неубывания (без разделителей).
		Полученное на шаге 3 число и является искомым R.
		Укажите минимальное число N, после обработки которого с помощью этого алгоритма получается число R, большее 85. В ответе запишите это число в десятичной системе счисления.		

			def f(n):
			    digits = sorted(map(int, str(n)))
			    res1 = digits[3] + digits[0]
			    res2 = digits[1] * digits[2]
			    if res1 > res2: return int(str(res2) + str(res1))
			    else: return int(str(res1) + str(res2))
			print([N for N in range(1000, 10000) if f(N) > 85])

			Очень важна строка "в котором все цифры различны" - поэтому найдем такое число в большом списке!

		Автомат получает на вход натуральное четырёхзначное число N. По этому числу строится новое число по следующим правилам:
		1. Складываются 1 и 2 цифры числа.
		2. Складываются 3 и 4 цифры числа.
		3. Полученные суммы записываются в порядке неубывания.
		4. Из наибольшей цифры полученного числа вычитается наименьшая, и результат вычитания записывается в конец числа.
		Каково наименьшее N, в результате применения к которому данного алгоритма, получается число 17176?		

			def f(n):
			    digits = list(map(int, str(n)))
			    res1 = digits[0] + digits[1]
			    res2 = digits[2] + digits[3]
			    res = ''
			    if res1 > res2: res = str(res2) + str(res1)
			    else: res = str(res1) + str(res2)
			    x = sorted(map(int, res))
			    y = x[-1] - x[0]
			    res = res + str(y)
			    return int(res)
			print(min([N for N in range(1000, 10000) if f(N) == 17176]))

		У Деда Мороза есть специальная машина для кодирования подарков, которая преобразует четырёхзначные числа по алгоритму:
		1. Вычисляет квадрат суммы чётных цифр
		2. Разность максимальной и минимальной цифры возводит в куб
		3. Полученные два числа записывает друг за другом в порядке неубывания
		Укажите наименьшее число, при обработке которого автомат выдаст число 4343.

			def f(n):
			    digits = sorted(map(int, str(n)))
			    res = []
			    for i in digits:
			        if i % 2 == 0: res.append(i)
			    res1 = sum(res)**2
			    res2 = (digits[-1] - digits[0])**3
			    r = ''
			    if res1 > res2: r = str(res2) + str(res1)
			    else: r = str(res1) + str(res2)
			    return int(r)
			print(min(N for N in range(1000, 10000) if f(N) == 4343))

		Дано натуральное четырёхзначное число N. К нему применяется алгоритм.
		1. Перемножаются первая и вторая, вторая и третья, третья и четвёртая цифры числа.
		2. Полученные произведения записываются друг за другом в порядке неубывания.
		3. Незначащие нули в начале числа отбрасываются.
		Какое максимальное четырёхзначное число можно получить?

			def f(n):
			    digits = list(map(int, str(n)))
			    res1 = digits[0] * digits[1]
			    res2 = digits[1] * digits[2]
			    res3 = digits[2] * digits[3]
			    r = sorted([res1, res2, res3])
			    res = ''
			    for i in r:
			        if i != 0: res += str(i)
			        else: res += '0'
			    return int(res)
			m = []
			for i in range(1000, 10000):
			    m.append(f(i))
			print(sorted(m))

		Автомат получает на вход четырёхзначное число. По этому числу строится новое число по следующим правилам.
		1. Складываются отдельно первая и вторая цифры, вторая и третья цифры, а также третья и четвёртая цифры.
		2. Из полученных трёх чисел выбираются два наибольших и записываются друг за другом в порядке неубывания без разделителей.
		Укажите наименьшее число, при обработке которого автомат выдаёт результат 1418.		

			def f(n):
			    digits = list(map(int, str(n)))
			    res1 = digits[0] + digits[1]
			    res2 = digits[1] + digits[2]
			    res3 = digits[2] + digits[3]
			    res = sorted([res1, res2, res3])
			    resAll = str(res[-2]) + str(res[-1])
			    return int(resAll)
			print(min([N for N in range(1000, 10000) if f(N) == 1418]))

		Автомат получает на вход четырёхзначное десятичное число, в котором все цифры нечётные. По этому числу строится новое число по следующим правилам.
		1. Складываются первая и вторая, а также третья и четвёртая цифры.
		2. Полученные два числа записываются друг за другом в порядке неубывания (без разделителей).
		Сколько существует чисел, в результате обработки которых автомат выдаст число 414.

			def f(n):
			    digits = list(map(int, str(n)))
			    res1 = digits[0] + digits[1]
			    res2 = digits[2] + digits[3]
			    res = sorted([res1, res2])
			    resAll = int(str(res[0]) + str(res[1]))
			    return resAll
			l = 0
			for i in range(1000, 10000):
			    I = list(map(int, str(i)))
			    if I[0] % 2 != 0 and I[1] % 2 != 0 and I[2] % 2 != 0 and I[3] % 2 != 0:
			        if f(i) == 414: l += 1
			print(l)

			Очень важна запись о числе, в котором все цифры нечетные.