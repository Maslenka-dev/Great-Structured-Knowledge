Исполнитель преобразует число на экране. У исполнителя есть две команды, которые обозначены латинскими буквами:
A. Вычесть 2.
B. Найти целую часть от деления на 2.
Программа для исполнителя — это последовательность команд.
Сколько существует программ, для которых при исходном числе 31 результатом является число 2?

	def f(x, y):
	    if x < y: return 0
	    if x == y: return 1
	    else: return f(x - 2, y) + f(x // 2, y)
	print(f(31, 2))

Исполнитель преобразует число на экране.
У исполнителя есть две команды, которые обозначены латинскими буквами:
А. Вычти 2
В. Найди целую часть от деления на 2
Программа для исполнителя — это последовательность команд.
Сколько существует программ, для которых при исходном числе 38 результатом является число 2 и при этом траектория вычислений содержит число 16?

	def f(x, y):
	    if x < y: return 0
	    if x == y: return 1
	    else: return f(x - 2, y) + f(x // 2, y)
	print(f(38, 16) * f(16, 2)) 

Исполнитель преобразует число на экране.
У исполнителя есть две команды, которым присвоены номера:
A. Вычти 1.
B. Найди целую часть от деления на 2.
Первая из них уменьшает число на экране на 1, вторая заменяет число на экране на целую часть от деления числа на 2.
Программа для исполнителя – это последовательность команд.
Сколько существует программ, для которых при исходном числе 30 результатом является число 1, и при этом траектория вычислений содержит число 13?

	def f(x, y):
	    if x < y: return 0
	    if x == y: return 1
	    else: return f(x - 1, y) + f(x // 2, y)
	print(f(30, 13) * f(13, 1))

Исполнитель Аллегро преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
A. Прибавить 1.
B. Прибавить 2.
C. Умножить на 3.
Первая команда увеличивает число на экране на 1, вторая увеличивает число на 2, третья умножает его на 3. Программа для исполнителя Аллегро — это последовательность команд.
Сколько существует программ, для которых при исходном числе 4 результатом является число 22 и при этом траектория вычислений содержит число 10, но не содержит число 20?

	def f(x, y):
	    if x > y or x == 20: return 0
	    if x == y: return 1
	    else: return f(x + 1, y) + f(x + 2, y) + f(x * 3, y)
	print(f(4, 10) * f(10, 22))

Исполнитель Тройник имеет три команды:
A. Прибавить 3.
B. Сделать нечётное.
C. Следующее, кратное 3.
Команда 1 увеличивает число на экране на 3, команда 2 получает число вида 2*х+1, команда 3 получает число, кратное 3, большее текущего.
Программа для исполнителя — это последовательность команд.
Сколько программ существует таких, что при исходном числе 5 будет получено число 89, при этом траектория вычислений исполнителя пройдет через число 23 и не пройдет через число 50?

	def f(x, y):
	    if x > y or x == 50: return 0
	    if x == y: return 1
	    else: 
	        tree = 0
	        for i in range(x, x + 10):
	            if i > x and i % 3 == 0:
	                tree = i
	                break
	        return f(x + 3, y) + f(2 * x + 1, y) + f(tree, y)
	print(f(5, 23) * f(23, 89))

Исполнитель ТриКоманды преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
A. Прибавить 1.
B. Умножить на 2.
C. Умножить на 3.
Сколько существует непустых программ, для которых при исходном чётном положительном числе результатом работы является число 15?

	def f(x, y):
	    if x > y: return 0
	    if x == y: return 1
	    else: return f(x + 1, y) + f(x * 2, y) + f(x * 3, y)
	cnt = 0
	for i in range(2, 16, 2):
	    cnt += int(f(i, 15))
	print(cnt)

Исполнитель Сумножатор имеет две команды:
A. Прибавить 4.
B. Умножить на 2.
Команда 1 увеличивает число на 4, команда 2 — вдвое.
Сколько различных чисел может получиться при начальном числе 2 в ходе работы исполнителя, если известно, что программа состоит из 5 команд?

	s = {2}  
	for _ in range(5):
	    new = set()
	    for x in s:
	        new.add(x + 4)
	        new.add(x * 2)
	    s = new
	print(len(s))

Исполнитель преобразует число на экране. У исполнителя есть две команды, которые обозначены латинскими буквами:
A. Прибавить 2.
B. Умножить на 3.
Программа для исполнителя — это последовательность команд.
Сколько различных чисел можно получить с помощью программы из четырёх команд из числа 1?

	s = {1}
	for i in range(4):
	    new = set()
	    for x in s:
	        new.add(x + 2)
	        new.add(x * 3)
	    s = new
	print(len(s))

