Отрезки

		Условие: На числовой прямой даны два отрезка: D = [17;58] и C = [29;80]. Укажите наименьшую возможную длину такого отрезка A, для которого логическое выражение - (x ∈ D) → ((¬(x ∈ C) ∧ ¬(x ∈ A)) → ¬(x ∈ D)) истинно (то есть принимает значение 1) при любом значении переменной х.

			def f(x):
			    D = 17 <= x <= 58
			    C = 29 <= x <= 80
			    A = a1 <= x <= a2
			    return D <= (((not C) and (not A)) <= (not D))
			r = []
			d = [y for x in (17, 58, 29, 80) for y in (x, x + 0.1, x - 0.1)]
			for a1 in d:
			    for a2 in d:
			        if a2 >= a1 and all(f(x) == 1 for x in d):
			            r += [a2 - a1]
			print(min(r))		

			Строчку r += [a2 - a1] можно заменить r.extend([a2 - a1]) или r.append(a2 - a1).

			D, C, A - булевые значения.
			D = 17 <= x <= 58 - если x входит в диапазон, то D равно True.

			Если x ∈ A, то A.
			Если x ∉ A, то (not A).

		Условие: На числовой прямой даны три отрезка: P = [10,15], Q = [10,20] и R = [5,15]. Какова наименьшая возможная длина интервала A, что формулы (x ∈ A) → (x ∈ P) и (x ∈ Q) → (x ∈ R) тождественно равны, то есть принимают равные значения при любом значении переменной х (за исключением, возможно, конечного числа точек).

			def f(x):
			    P = 10 <= x <= 15
			    A = a1 <= x <= a2
			    return A <= P
			def g(x):
			    Q = 10 <= x <= 20
			    R = 5 <= x <= 15
			    return Q <= R
			r = []
			d = [y for x in (10, 15, 10, 20, 5, 15) for y in (x, x + 0.1, x - 0.1)]
			for a1 in d:
			    for a2 in d:
			        if a2 >= a1 and all(f(x) == g(x) for x in d): r.extend([a2 - a1])
			print(min(r))

		Условие: На числовой прямой даны два отрезка: P = [52;105] и  Q = [0;53]. Укажите наименьшую возможную длину такого отрезка A, для которого логическое выражение ((x∉P)∧(x∉Q)∧(x∉A))→(x2>303601) истинно (т.е. принимает значение 1) при любом неотрицательном значении переменной x.

			def f(x):
			    P = 52 <= x <= 105
			    Q = 0 <= x <= 53
			    A = a1 <= x <= a2
			    return ((not P) and (not Q) and (not A)) <= (x**2 > 551**2)
			r = []
			d = [y for x in (-551, 52, 105, 0, 53, 551) for y in (x, x + 0.1, x - 0.1)]
			for a1 in d:
			    for a2 in d:
			        if a2 >= a1 and all(f(x) == 1 for x in d if x >= 0): r.extend([a2 - a1]) 
			print(min(r))		

			303601 - 551 ** 2 или -551 ** 2: они тоже точки отрезка.
			f(x) == 1 for x in d if x >= 0 !! при любом неотрицательном значении переменной x.

Конъюнкция

		Условие: Для какого наименьшего неотрицательного целого числа А формула x&17 = 0 → (x&29 ≠ 0 → x&А ≠ 0) тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной х)?

			def f(x, A):
			    return (x & 17 == 0) <= ((x & 29 != 0) <= (x & A != 0))
			print(min([A for A in range(0, 1000) if all(f(x, A) == 1 for x in range(0, 1000))]))

		Условие: Для какого наименьшего неотрицательного целого числа А формула (x&6280 > 0 ∨ x&3394 > 0) → (x&10828 = 0 → x&A > 0) тождественно истинна (т.е. принимает значение 1 при любом неотрицательном целом значении переменной х)?	 	

			def f(x, A):
			    return ((x & 6280 > 0) or (x & 3394 > 0)) <= ((x & 10828 == 0) <= (x & A > 0))
			print(min([A for A in range(0, 20000) if all(f(x, A) == 1 for x in range(0, 20000))]))	

			Для подобных задач расширяем диапазон перебора A и x в зависимости от формулы.

Делители

		Условие: Для какого наибольшего натурального числа А логическое выражение ¬ДЕЛ(x, А) → (ДЕЛ(x, 14) → ¬ДЕЛ(x, 4)) истинно (т.е. принимает значение 1) при любом целом положительном значении переменной х?

			def DEL(x, y): return x % y == 0
			def f(x, A):
			    return (not(DEL(x, A))) <= (DEL(x, 14) <= (not(DEL(x, 4))))
			print(max([A for A in range(1, 1000) if all(f(x, A) == 1 for x in range(1, 1000))]))

			или

			def f(x, A):
			    return (not(x % A == 0)) <= ((x % 14 == 0) <= (not(x % 4 == 0)))
			print(max([A for A in range(1, 1000) if all(f(x, A) == 1 for x in range(1, 1000))]))

		Условие: Для какого наибольшего натурального числа А логическое выражение тождественно истинна (то есть принимает значение 1 при любом натуральном значении переменной x), если B=[70,90]? ДЕЛ(x, A) ∨ ((x ∈ B) → ¬(ДЕЛ(x, 22))).

			def DEL(x, y): return x % y == 0
			def f(x, A): 
			    B = 70 <= x <= 90
			    return DEL(x, A) or (B <= (not(DEL(x, 22))))
			print(max([A for A in range(1, 1000) if all(f(x, A) == 1 for x in range(1, 1000))]))

		Условие: Укажите наименьшее целое значение A, для которого формула (ДЕЛ(144,x)→¬ДЕЛ(x,y))∨ (x+y>100)∨(A−x>y) тождественно истинна при любых натураль ных значениях переменных x и y.

			def DEL(x, y): return x % y == 0
			def f(x, y, A): return (DEL(144, x) <= (not(DEL(x, y)))) or (x + y > 100) or (A - x > y)
			print(min([A for A in range(0, 200) if all(f(x, y, A) == 1 for x in range(1, 200) for y in range(1, 200))]))

		Условие: Обозначим через ТРЕУГ(n,m,k) утверждение «существует невырожденный треугольник с длинами сторон n, m, k». Для какого наибольшего натурального числа A формула ((ТРЕУГ(x,10,20) → (¬(МАКС(x, 8) > 24))) = ¬(ТРЕУГ(3,A,x))) тождественно истинна (то есть принимает значение 1) при любом натуральном значении переменной х? 

			def TRIANGLE(n, m, k): 
			    if n + m > k and n + k > m and k + m > n: return True
			    else: return False
			def f(x, A): return ((TRIANGLE(x, 10, 20) <= (not(max(x, 8) > 24))) == (not(TRIANGLE(3, A, x))))
			print(max([A for A in range(1, 2000) if all(f(x, A) == 1 for x in range(1, 2000))]))

			или (более короткая запись функции TRIANGLE)

			def TRIANGLE(n, m, k): return True if n + m > k and n + k > m and k + m > n else False
			def f(x, A): return ((TRIANGLE(x, 10, 20) <= (not(max(x, 8) > 24))) == (not(TRIANGLE(3, A, x))))
			print(max([A for A in range(1, 2000) if all(f(x, A) == 1 for x in range(1, 2000))]))

		Условие: Обозначим через ТРЕУГ(n,m,k) утверждение «существует треугольник с длинами сторон n, m, k». Для какого наибольшего натурального числа A формула ¬((ТРЕУГ (х, 11, 16) ≡ (¬(МАКС(x, 5) > 10))) ∧ ТРЕУГ(4, A, x)) тождественно истинна (то есть принимает значение 1) при любом натуральном значении переменной х? 

			def triangle(n, m, k): return True if n + m > k and n + k > m and k + m > n else False
			def f(x, A): return (not((triangle(x, 11, 16) == ((not(max(x, 5) > 10)))) and triangle(4, A, x)))
			print(max([A for A in range(1, 1000) if all(f(x, A) == 1 for x in range(1, 1000))]))

Неравенства

		Для какого наименьшего целого неотрицательного числа А выражение (3x + 7y < A) ∨ (x ≥ y) ∨ (y > 6) тождественно истинно, то есть принимает значение 1 при любых целых неотрицательных x и y? 

			def f(x, y, A): return (3 * x + 7 * y < A) or (x >= y) or (y > 6)
			print(min([A for A in range(0, 100) if all(f(x, y, A) == 1 for x in range(0, 100) for y in range(0, 100))]))