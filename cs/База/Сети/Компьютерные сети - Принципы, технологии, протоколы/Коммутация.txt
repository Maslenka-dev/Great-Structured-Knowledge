Пусть компьютеры физически связаны между собой в соответствии с некоторой топологией, выбрана система адресации. Остается нерешенным вопрос: каким образом передавать данные между конечными узлами? Особую сложность приобретает эта задача для неполносвязной топологии сети, когда обмен данными между произвольной парой конечных узлов (пользователей) должен идти в общем случае через транзитные узлы.

Коммутация - соединение конечных узлов через сеть транзитных узлов.

Маршрут - последовательность узлов, лежащих на пути от отправителя к получателю.

В самом общем виде задача коммутации может быть представлена в виде следующих взаимосвязанных частных задач:

	1. Определение информационных потоков, для которых требуется прокладывать маршруты.
	2. Маршрутизация потоков - прокладка маршрутов.
	3. Продвижение потоков, то есть распознавание потоков на каждом транзитном узле.
	4. Мультиплексирование и демультиплексирование потоков.

Транзитный узел должен уметь распознавать поступающие на него потоки данных, чтобы обеспечивать передачу каждого из них именно на тот свой интерфейс, который ведет к нужному узлу, и, возможно, чтобы выбрать специфический для данного потока способ его обработки.

Информационный поток или поток данных - непрерывная последовательность данных, объединенных набором общих признаков, выделяющих эти данные из общего сетевого трафика.

Data stream - поток данных, передающихся с равномерной скоростью.

Data flow - поток данных, передающихся с неравномерной скоростью.

Haпример, при передаче веб-страницы через Интернет предложенная нагрузка представляет собой неравномерный поток данных, а при вещании музыки интернет-станцией - равномерный. Для сетей передачи данных характерна неравномерная скорость.

Очевидно, что при коммутации в качестве обязательного признака выступает адрес назначения данных. На основании этого признака весь поток входящих в транзитный узел данных разделяется на подпотоки, каждый из которых передается на интерфейс, соответствующий тому или иному маршруту продвижения данных.

Адреса источника и назначения определяют поток для пары соответствующих конечных узлов. Однако часто бывает полезно представить этот поток в виде нескольких подпотоков, причем для каждого из них может быть проложен свой особый маршрут. Рассмотрим пример, когда на одной и той же паре конечных узлов выполняется несколько взаимодействующих по сети приложений, каждое из которых предъявляет к сети свои особые требования. В таком случае выбор маршрута должен осуществляться с учетом характера передаваемых данных, например, для файлового сервера важно, чтобы передаваемые им большие объемы данных направлялись по каналам, обладающим высокой пропускной способностью, а для программной системы управления, которая посылает В сеть короткие сообщения, требующие обязательной и немедленной отработки, при выборе маршрута более важна надежность линии связи и минимальный уровень задержек на маршруте. Кроме того, даже для данных, предъявляющих к сети одинаковые требования, может прокладываться несколько маршрутов, чтобы за счет распараллеливания ускорить передачу данных.

Метка потока - это особый тип признака. Она представляет собой некоторое число, ко торое несут все данные потока. Глобальная метка назначается данным потока и не меняет своего значения на всем протяжении его пути следования от узла источника до узла назначения, таким образом, она уникально определяет поток в пределах сети. В некоторых технологиях используются локальные метки потока, динамически меняющие свое значение при передаче данных от одного узла к другому.

Таким образом, распознавание потоков во время коммутации происходит на основании признаков, в качестве которых, помимо обязательного адреса назначения данных, могут выступать и другие признаки - такие, например, как идентификаторы приложений.