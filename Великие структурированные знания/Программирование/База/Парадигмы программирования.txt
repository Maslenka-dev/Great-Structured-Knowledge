Парадигма программирования – это совокупность идей и понятий, определяющих стиль написания компьютерных программ (подход к программированию). Это способ концептуализации, определяющий организацию вычислений и структурирование работы, выполняемой компьютером.

Основные парадигмы:
	1. Императивное программирование
	2. Процедурное программирование
	3. Объектно-ориентированное программирование


Императивное программирование. Императивное программирование – это набор подробных инструкций, которые даются компьютеру, чтобы тот выполнил их в заданном порядке. Этот тип программирования называется «императивным», потому что мы некоторым образом указываем компьютеру (как программисты), что он должен делать. Императивное программирование концентрируется на описании того, как программа работает, шаг за шагом. Наши инструкции предельно детализированы и конкретны, и именно это и является императивным программированием.

Процедурное программирование. Процедурная парадигма — это подвид императивной парадигмы. Алгоритм выполнения программы также представлен в как последовательность инструкций, но наборы однотипных инструкций организованы в специальные блоки кода, процедуры. Процедуры можно вызывать много раз. Им можно передавать параметры. В этом случае процедура будет выполнять одну и ту же операцию над разными исходными данными. Процедуру можно вызвать из любой точки главной программы, из другой процедуры или внутри себя. Яркими примерами здесь являются C, Basic и Pascal.

Объектно-ориентированное программирование. Основная концепция ООП заключается в разделении понятий на сущности, которые описываются как некие объекты. Каждая сущность группирует заданный набор информации (свойств) и действий (методов), которые может выполнять эта сущность. ООП широко использует классы. Классы - это способ создания новых объектов с помощью макета или шаблона, который задает программист. Объекты, которые были созданы с помощью класса, называются экземплярами. Преимущество ООП заключается в том, что оно облегчает понимание программы за счет четкого разделения задач и обязанностей. Яркими примерами языков программирования являются C++, Java, C#.

