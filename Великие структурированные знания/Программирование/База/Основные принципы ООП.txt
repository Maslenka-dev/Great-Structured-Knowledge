1. Объект — это элементарная сущность, имеющая свойства (атрибуты) и поведение (методы, они же — бывшие процедуры)

2. Класс — это тип, шаблон, определяющий структуру, набор атрибутов и методов для объектов одного типа — то есть, экземпляров класса;

3. Инкапсуляция — это механизм, позволяющий скрывать некоторые детали реализации внутри класса. Это свойство языка программирования, позволяющее пользователю не задумываться о сложности реализации используемого программного компонента (что у него внутри?), а взаимодействовать с ним посредством предоставляемого интерфейса (публичных методов и членов), а также объединить и защитить жизненно важные для компонента данные. При этом пользователю предоставляется только спецификация (интерфейс) объекта. Пользователь может взаимодействовать с объектом только через этот интерфейс. Реализуется с помощью ключевого слова: public. 

4. Полиморфизм — это механизм, позволяющий использовать одну и ту же функцию (метод) для данных разных типов (классов). Язык программирования поддерживает полиморфизм, если классы с одинаковой спецификацией могут иметь различную реализацию — например, реализация класса может быть изменена в процессе наследования. Кратко смысл полиморфизма можно выраить фразой: «Один интерфейс, множество реализаций». Полиморфизм в языке C# имеет несколько аспектов: 

	Базовые классы могут определять и реализовывать виртуальные методы, а производные классы могут переопределять их, что означает, что они предоставляют собственное определение и реализацию.

	Перегрузка методов - механизм языка, который позволяет оперделить несколько методов с одним и тем же именем, но с различными параметрами. Кроме того, в C# по схожему принципу можно перегружать операторы и конструкторы.

5. Наследование —  механизм, позволяющий описать новый класс на основе уже существующего (родительского), при этом свойства и функциональность родительского класса заимствуются новым классом. Другими словами, класс-наследник реализует спецификацию уже существующего класса (базовый класс). Это позволяет обращаться с объектами класса-наследника точно так же, как с объектами базового класса. 

6. Абстракция — моделирование требуемых атрибутов и взаимодействий сущностей в виде классов для определения абстрактного представления системы. Основная идея состоит в том, чтобы представить объект минимальным набором полей и методов и при этом с достаточной точностью для решаемой задачи. 