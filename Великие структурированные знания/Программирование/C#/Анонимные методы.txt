С делегатами тесно связаны анонимные методы. Анонимные методы используются для создания экземпляров делегатов.

Определение анонимных методов начинается с ключевого слова delegate, после которого идет в скобках список параметров и тело метода в фигурных скобках. Например: 

	MessageHandler handler = delegate (string message)
	{
	    Console.WriteLine(message);
	};
	handler("Hello!");
	delegate void MessageHandler(string message);

Анонимный метод не может существовать сам по себе, он используется для инициализации экземпляра делегата, как в данном случае переменная handler представляет анонимный метод. И через эту переменную делегата можно вызвать данный анонимный метод.

Если анонимный метод использует параметры, то они должны соответствовать параметрам делегата. Если для анонимного метода не требуется параметров, то скобки с параметрами опускаются. При этом даже если делегат принимает несколько параметров, то в анонимном методе можно вовсе опустить параметры:

	MessageHandler handler = delegate
	{
	    Console.WriteLine("Hello!!!");
	};
	handler("анонимный метод");
	delegate void MessageHandler(string message);

Также, как и обычные методы, анонимные могут возвращать результат:

	Operation operation = delegate(int x, int y)
	{
	    return x + y;
	};
	Console.WriteLine(operation(24, 53));
	delegate int Operation(int x, int y);

При этом анонимный метод имеет доступ ко всем переменным, определенным во внешнем коде:

	int z = 9;
	Operation2 operation2 = delegate (int x, int y)
	{
	    return x + y + z;
	};
	Console.WriteLine(operation2(4, 5));
	delegate int Operation2(int x, int y);