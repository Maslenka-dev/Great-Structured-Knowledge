Конструкция switch/case оценивает некоторое выражение и сравнивает его значение с набором значений. И при совпадении значений выполняет определенный код.:

Конструкция switch имеет следующее формальное определение:

	switch (выражение)
	{
	    case значение1:
	        код,выполняемый если выражение имеет значение1
	        break;
	    case значение2:
	        код,выполняемый если выражение имеет значение1
	        break;
	    //.............
	    case значениеN:
	        код, выполняемый если выражение имеет значениеN
	        break;
	    default:
	        код, выполняемый если выражение не имеет ни одно из выше указанных значений
	        break;
	}

После ключевого слова switch в скобках идет сравниваемое выражение. Значение этого выражения последовательно сравнивается со значениями, помещенными после оператора сase. И если совпадение будет найдено, то будет выполняться определенный блок сase.

В конце каждого блока сase должен ставиться один из операторов перехода: break, goto case, return или throw. Как правило, используется оператор break. При его применении другие блоки case выполняться не будут.

	string name = "Tom";
	switch (name)
	{
	    case "Bob":
	        Console.WriteLine("Имя: Bob");
	        break;
	    case "Tom":
	        Console.WriteLine("Имя: Tom");
	        break;
	    case "Alex":
	        Console.WriteLine("Имя: Alex");
	        break;
	    case "Mark":
	        Console.WriteLine("Имя: Mark");
	        break;
	}

В данном случае конструкция switch последовательно сравнивает значение переменной name с набором значений, которые указаны после операторов case. Поскольку здесь значение переменной name - строка "Tom", то будет выполняться блок

	case "Tom":
	    Console.WriteLine("Имя: Tom");
	    break;

Если значение переменной name не совпадает ни с каким значением после операторов case, то ни один из блоков case не выполняется. Однако если даже в этом случае нам все равно надо выполнить какие-нибудь действия, то мы можем добавить в конструкцию switch необязательный блок default. Например:

	string name2 = "Sam";
	switch (name2)
	{
	    case "Tom":
	        Console.WriteLine("Имя: Tom");
	        break;
	    case "Bob":
	        Console.WriteLine("Имя: Bob");
	        break;
	    case "Alex":
	        Console.WriteLine("Имя: Alex");
	        break;
	    default: 
	        Console.WriteLine("Неизвестное имя");
	        break;
	}

В данном случае никакое из значений после операторов case не совпадает со значением переменной name, поэтому будет выполняться блок default:

	default:
	    Console.WriteLine("Неизвестное имя");
	    break;

Однако если мы хотим, чтобы, наоборот, после выполнения текущего блока case выполнялся другой блок case, то мы можем использовать вместо break оператор goto case:

	int number = 3;
	switch (number)
	{
	    case 1:
	        Console.WriteLine(number);
	        break;
	    case 2:
	        Console.WriteLine(number);
	        break;
	    case 3:
	        Console.WriteLine(number);
	        goto case 6;
	    case 6:
	        Console.WriteLine(number);
	        break;
	}